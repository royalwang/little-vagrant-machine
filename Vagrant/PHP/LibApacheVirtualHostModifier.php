<?php

/**
 * Lib: Modify Apache VirtualHost settings
 *
 * @copyright   (C) 2015 Rain Lee <raincious@gmail.com>
 * @see         LICENSE for license
 */

define('DEFAULT_HOST_CONFIG_TEMPLATE', "<VirtualHost *:80>
\tServerName %{HOST_NAME}
\tServerAdmin webmaster@%{HOST_NAME}
\tDocumentRoot /var/www/%{PROJECT_DIR}
\tErrorLog \${APACHE_LOG_DIR}/%{HOST_NAME}-error.log
\tCustomLog \${APACHE_LOG_DIR}/%{HOST_NAME}-access.log combined
</VirtualHost>

<IfModule mod_ssl.c>
\t<VirtualHost *:443>
\t\tServerName %{HOST_NAME}
\t\tServerAdmin webmaster@%{HOST_NAME}
\t\tDocumentRoot /var/www/%{PROJECT_DIR}
\t\tSSLEngine On
\t\tSSLCertificateFile /etc/apache2/ssl/%{HOST_NAME}.crt
\t\tSSLCertificateKeyFile /etc/apache2/ssl/%{HOST_NAME}.key
\t\tErrorLog \${APACHE_LOG_DIR}/%{HOST_NAME}-error.log
\t\tCustomLog \${APACHE_LOG_DIR}/%{HOST_NAME}-access.log combined
\t</VirtualHost>
</IfModule>

# Generated By 3AX.ORG Vagrant VM Generater Script #\r\n");

function parseApacheVirtualHostConfig(array $config)
{
    return str_replace(
        array_keys($config),
        array_values($config),
        defined('HOST_CONFIG_TEMPLATE') ? HOST_CONFIG_TEMPLATE : DEFAULT_HOST_CONFIG_TEMPLATE
    );
}

function createApacheVirtualHostConfig($file, array $config)
{
    if (file_exists($file) && (!is_writable($file) || !unlink($file))) {
        return false;
    }

    return file_put_contents(
        $file,
        parseApacheVirtualHostConfig($config)
    );
}

function rewindApacheVirtualHostConfig($file, array $config)
{
    if (!file_exists($file)) {
        return createApacheVirtualHostConfig($file, $config);;
    }

    $configContent = file_get_contents($file);

    if (strpos($configContent, '# Generated By 3AX.ORG Vagrant VM Generater Script #') !== false) {
        return createApacheVirtualHostConfig($file, $config);
    }

    if (preg_match('/<VirtualHost \*:80>/Ui', $configContent) <= 0) {
        return false;
    }

    return file_put_contents(
        $file,
        preg_replace(
            '/<VirtualHost \*:80>(.*)<\/VirtualHost>/Usi',
            parseApacheVirtualHostConfig($config),
            $configContent
        )
    );
}